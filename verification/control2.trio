variables
	pump_start:[0..1], pump_stop:[0..1], pump_on:[0..1], pump_off:[0..1],
	tap_on:[0..1],

	temp_tank:[1..5], temp_collector:[1..5], delta_temp:[0..2],
	pump_volume:[0..1],

	collector_temperature:[1..5],
	tank_temperature:[1..5],

	update:[0..1]

constants
	DELTA_LOW = 0, DELTA_MEDIUM = 1, DELTA_HIGH = 2, PUMP_VOLUME=1,
	COLD_SUPPLY_TEMPERATURE=1, TAP_VOLUME=1, COLLECTOR_MAX_VOLUME=10,
	WATER_SPECIFIC_HEAT=1, WATER_DENSITY=1, TANK_MAX_VOLUME=20,
	POLLING_INTERVAL=3, TOTAL_VOLUME=30

axioms

	controller_define_delta:
		(temp_collector = 5 -> (
			((temp_tank <= 3) -> delta_temp = DELTA_HIGH) &
			((temp_tank = 4) -> delta_temp = DELTA_MEDIUM) &
			((temp_tank = 5) -> delta_temp = DELTA_LOW)
		)) &
		(temp_collector = 4 -> (
			((temp_tank = 1 | temp_tank = 2) -> delta_temp = DELTA_HIGH) &
			((temp_tank = 3) -> delta_temp = DELTA_MEDIUM) &
			((temp_tank = 4 | temp_tank = 5) -> delta_temp = DELTA_LOW)
		)) &
		(temp_collector = 3 -> (
			((temp_tank = 1) -> delta_temp = DELTA_HIGH) &
			((temp_tank = 2) -> delta_temp = DELTA_MEDIUM) &
			((temp_tank >= 3) -> delta_temp = DELTA_LOW)
		)) &
		(temp_collector = 2 -> (
			((temp_tank = 1) -> delta_temp = DELTA_MEDIUM) &
			((temp_tank > 1) -> delta_temp = DELTA_LOW)
		)) &
		(temp_collector = 1 -> delta_temp = DELTA_LOW);
	
	controller_start:
		UpToNow(pump_off=1) & (delta_temp = DELTA_HIGH) <-> pump_start=1;
	
	controller_stop:
		UpToNow(pump_on=1) & (delta_temp = DELTA_LOW) <-> pump_stop=1;

	pump_start_off:
		AlwP(pump_start=0) -> pump_off=1;

	pump_when_off:
		pump_off=1 -> pump_volume = 0;
		
	pump_when_on:
		pump_on=1 -> pump_volume = PUMP_VOLUME;
		
	pump_start:
		UpToNow(pump_off=1) & pump_start=1 -> Until_w(pump_on=1, pump_stop=1);

	pump_stop:
		UpToNow(pump_on=1) & pump_stop=1 -> Until_w(pump_off=1, pump_start=1);

	pump_state_unique:
		(pump_off=1 & pump_on=0) | (pump_on=1 & pump_off=0);

		periodicity:
			update=1 -> NextTime(update=1, POLLING_INTERVAL);
		
		sens_tank_update:
			update=1 -> temp_tank = tank_temperature;

		sens_collector_update:
			update=1 -> temp_collector = collector_temperature;

		sens_tank_hold:
			update=0 -> (
				(Past(temp_tank=1, 1) -> temp_tank=1) &
				(Past(temp_tank=2, 1) -> temp_tank=2) &
				(Past(temp_tank=3, 1) -> temp_tank=3) &
				(Past(temp_tank=4, 1) -> temp_tank=4) &
				(Past(temp_tank=5, 1) -> temp_tank=5)
			);

		sens_collector_hold:
			update=0 -> (
				(Past(temp_collector=1, 1) -> temp_collector=1) &
				(Past(temp_collector=2, 1) -> temp_collector=2) &
				(Past(temp_collector=3, 1) -> temp_collector=3) &
				(Past(temp_collector=4, 1) -> temp_collector=4) &
				(Past(temp_collector=5, 1) -> temp_collector=5)
			);
		
		start_update:
			AlwP(update=0) -> update=1;

// properties to check:
// 	pump_start | pump_stop -> update

	controller_acts_on_update:
		(pump_start=1 | pump_stop=1) & update=0;
