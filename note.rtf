{\rtf1\ansi\ansicpg932\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 porperties to check:\
- no switch on-off too fast (thx to hysteresis)\
\
assumptions:\
- the volume of water pumped per minute is << than the volume of water inside the tank and inside the collector\
(this allows us to do a discrete time approximulation)\
\
\
INCONTRO SPOLETINI:\
\
sensore ogni minuto\
\
TD va bene, ma NON periodo = 1 min \
\
FINE INCONTRO SPOLETINI\
\
\
ci potrebbe essere un ritardo nel sensore <- if we want to do this, we'll use a separate thermometer component that introduces a delay\
\
LED manutenzione <-- it's already the maintenance predicate in the system\
\
moving axioms to future for optimizing checking\
\
\
another thing we can add: \
\
\
Work for next time:\
Lydumil: sensor, report on water_container, collector, tank\
Camillo: report on overall system, controller, sensor, think of how to implement a time-continuous model\
Davide: report on pump, tap, maintainer\
\
\
\
davide's availability:\
NOT(\
	wed 10-12, 14-16\
	thu 8-10, 14-16\
)\
lyudmil's availability: {\field{\*\fldinst{HYPERLINK "https://tungle.me/lyudmilangelov"}}{\fldrslt https://tungle.me/lyudmilangelov}}\
\
\
\
things to check for verification:\
\
- verify that our implicit enforcement of controller update is sufficient (say comment)\
- verify that the controller cannot set pump_control(start) and pump_control(stop) at the same time\
- no leaks\
- pump must not switch on/off too fast\
- cannot have too much temp diff between tank and collector\
- pump cannot get control start and control stop at the same time\
- se c'\'e8 abbastanza sole, e uno apre l'acqua calda, entro un certo tempo arriva calda\
\
-- DA VERIFICARE\
--		collector_volume_remains_constant:\
--			memo_volume[1] = volume;\
		\
		NoLeaks:\
			tank.volume + collector.volume = total_volume;\
		\
\
\
\
		collector_volume_change:\
			collector_volume = old_collector_volume + old_collector_delta_volume;\
\
		tank_volume_change:\
			tank_volume = old_tank_volume + old_tank_delta_volume;\
		\
\
verifichiamo semplicemente che collector_delta_volume sia sempre 0!\
\
\
}